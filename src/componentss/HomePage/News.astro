---
import { getCollection } from "astro:content";
import dateFormat from "@/lib/utils/dateFormat";

const allNewsList = (await getCollection('newslist')).filter(
  (item) => item.data.draft !== true
);
---
<!-- // interface Props {
//     NewsList: {
//         date?: string;
//         href?: string;
//         text?: string;
//     }[];
// }

// const {NewsList=[]}: Props = Astro.props

// import { getCollection } from "astro:content";
// import type { CollectionEntry } from "astro:content";
// import dateFormat from "@/lib/utils/dateFormat";

// const allNewsList: CollectionEntry<'newslist'>[] = (await getCollection('newslist'))
// const allNewsList = (await getCollection('newslist')).filter((item) => !item.data.draft);

// let allNewsList: CollectionEntry<'newslist'>[] = [];

// (async () => {
//   try {
//     allNewsList = await getCollection('newslist');
//   } catch (error) {
//     console.error("Failed to fetch news list:", error);
//   }
// })(); -->



<div class="mt-3 h-[480px] overflow-auto scrollbar-thumb-blue-300 scrollbar-track-slate-100 scrollbar-thin">
  {allNewsList.length > 0 ? (
    allNewsList.map((item) => (
      <div class="flex items-start pb-3" data-id={item.id}>
        <div class="flex justify-between item-center mr-3 min-h-28 w-full my-1 bg-slate-200 py-4 px-4 rounded-md group">
          <div class="text-sm">
            <p class="text-gray-600 text-xs my-1">
              {item.data.date ? dateFormat(item.data.date) : "Unknown Date"}
            </p>
            <a
              href={item.data.href || "#"}
              target="_blank"
              class="text-gray-900 text-md font-medium group-hover:text-[var(--accent)] transition-colors duration-300 leading-none"
            >
              {item.data.text || "No Text Available"}
            </a>
          </div>
        </div>
      </div>
    ))
  ) : (
    <p class="text-center text-gray-500">No news items available.</p>
  )}
</div>



<!-- 
<div class="mt-3 h-[480px] overflow-auto scrollbar-thumb-blue-300 scrollbar-track-slate-100 scrollbar-thin ">
    {allNewsList.length > 0 ? (
      allNewsList.map((item) => (
        <div class="flex items-start pb-3" key={item.id}>
          <div class="flex justify-between item-center mr-3 min-h-28 w-full my-1 bg-slate-200 py-4 px-4 rounded-md group">
            <div class="text-sm">
              <p class="text-gray-600 text-xs my-1">
                {item.data.date ? dateFormat(item.data.date) : "Unknown Date"}
              </p>
              <a
                href={item.data.href || "#"}
                target="_blank"
                class="text-gray-900 text-md font-medium group-hover:text-[var(--accent)] transition-colors duration-300 leading-none"
              >
                {item.data.text || "No Text Available"}
              </a>
            </div>
            {/* Optional icon */}
            {/* <i class="text-3xl fa-solid fa-square-arrow-up-right group-hover:text-[var(--accent)] transition-colors duration-300"></i> */}
          </div>
        </div>
      ))
    ) : (
      <p class="text-center text-gray-500">No news items available.</p>
    )}
</div> -->

<!-- <div class=" mt-3 h-[480px] overflow-auto">

    {allNewsList.length > 0 && (
        allNewsList.map((item) => (

        <div class="flex items-start  pb-3">
            <div class=" flex justify-between item-center mr-3 min-h-28 w-full my-1 bg-slate-200 py-4 px-4 rounded-md group">	
                <div class="text-sm">
                    <p class="text-gray-600 text-xs my-1">{dateFormat(item.data.date)}</p>
                    <a href={item.data.href} target="_blank" class="text-gray-900 text-md font-medium group-hover:text-[var(--accent)] transition-colors duration-300 leading-none"> {item.data.text} </a>
                </div>
                {/* <i class="text-3xl fa-solid fa-square-arrow-up-right group-hover:text-[var(--accent)] transition-colors duration-300 "></i> */}
                
            </div>
        </div>
        
        ))
        )}
    
</div> -->


